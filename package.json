{
  "name": "atomic-fishbowl-server",
  "version": "1.0.0",
  "description": "API Server for Atomic Fishbowl",
  "main": "index.js",
  "config": {
    "outputDir": "dist",
    "srcDir": "src",
    "serviceTypeNw": "servicetype-nw.js",
    "serviceTypeSa": "servicetype-sa.js",
    "nwServicePref": "default-nw-preferences.js",
    "saServicePref": "default-sa-preferences.js",
    "currentServicePref":  "$npm_package_config_nwServicePref",
    "serversrc": "build-properties.js logging.js database.js token-manager.js configuration-manager.js default-afb-preferences.js kentech-public-key.js usecases.js feed-scheduler.js fixed-collections.js rolling-collections.js user.js index.js",
    "workersrc": "worker worker_fetcher worker_communicator worker_contentobj worker_contentprocessor worker_feedmanager",
    "feedersrc": "feeder_srv feeder_hasher feeder_communicator",
    "pythonInclude": "-I/usr/include/python3.6m",
    "ldflags": "",
    "macPythonInclude": "-I/opt/local/Library/Frameworks/Python.framework/Versions/3.6/include/python3.6m",
    "macPythonLdflags": "-L/opt/local/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/config-3.6m-darwin -lpython3.6m"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "cd src && node index.js",
    "clean": "rm -rf $npm_package_config_outputDir && mkdir -p $npm_package_config_outputDir/worker $npm_package_config_outputDir/feeder",
    "buildnw": "npm run clean && cd $npm_package_config_srcDir && uglifyjs $npm_package_config_serviceTypeNw $npm_package_config_nwServicePref $npm_package_config_serversrc --toplevel --compress --mangle --ecma 6 -o ../$npm_package_config_outputDir/server.js --source-map url=\"server.js.map\" && npm run buildpy",
    "buildsa": "npm run clean && cd $npm_package_config_srcDir && uglifyjs $npm_package_config_serviceTypeSa $npm_package_config_saServicePref $npm_package_config_serversrc --toplevel --compress --mangle --ecma 6 -o ../$npm_package_config_outputDir/server.js --source-map url=\"server.js.map\" && npm run buildpy",
    "buildpy": "npm run buildworker && npm run buildfeeder",
    "buildworker": "if $(uname -a | grep -q ^Darwin); then PYTHONINCLUDE=$npm_package_config_macPythonInclude && LDFLAGS=$npm_package_config_macPythonLdflags; else PYTHONINCLUDE=$npm_package_config_pythonInclude && LDFLAGS=$npm_package_config_ldflags; fi; cd $npm_package_config_srcDir/worker && for f in $npm_package_config_workersrc; do if $(cython -3 $f.py -o $f.c); then gcc -shared -pthread -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing $PYTHONINCLUDE $LDFLAGS -o $f.so $f.c && mv $f.so ../../$npm_package_config_outputDir/worker && rm -f $f.c; fi; done; cp worker_stub.py ../../$npm_package_config_outputDir/worker",
    "buildfeeder": "if $(uname -a | grep -q ^Darwin); then PYTHONINCLUDE=$npm_package_config_macPythonInclude && LDFLAGS=$npm_package_config_macPythonLdflags; else PYTHONINCLUDE=$npm_package_config_pythonInclude && LDFLAGS=$npm_package_config_ldflags; fi; cd $npm_package_config_srcDir/feeder && for f in $npm_package_config_feedersrc; do if $(cython -3 $f.py -o $f.c); then gcc -shared -pthread -fPIC -fwrapv -O2 -Wall -fno-strict-aliasing $PYTHONINCLUDE $LDFLAGS -o $f.so $f.c && mv $f.so ../../$npm_package_config_outputDir/feeder && rm -f $f.c; fi; done; cp feeder_stub.py ../../$npm_package_config_outputDir/feeder"
  },
  "author": "Kensington Technology Associates, Limited",
  "license": "SEE LICENSE IN atomic-fishbowl.license",
  "dependencies": {
    "body-parser": "^1.17.1",
    "cookie-parser": "^1.4.3",
    "express": "^4.15.2",
    "is-docker": "^1.1.0",
    "jsonwebtoken": "^7.4.2",
    "moment": "^2.18.1",
    "mongodb": "^2.2.28",
    "mongoose": "^4.11.0",
    "multer": "^1.3.0",
    "node-cleanup": "^2.1.2",
    "node-rest-client": "^3.1.0",
    "node-rsa": "^0.4.2",
    "node-schedule": "^1.3.2",
    "passport": "^0.3.2",
    "passport-jwt": "^2.2.1",
    "passport-local": "^1.0.0",
    "passport-local-mongoose": "^4.0.0",
    "request": "^2.88.0",
    "rmfr": "^2.0.0",
    "sleep": "^5.1.1",
    "socket.io": "^2.0.4",
    "socket.io-cookie": "0.0.1",
    "socketio-auth": "^0.1.1",
    "source-map-support": "^0.4.17",
    "sprintf-js": "^1.1.1",
    "temp": "^0.8.3",
    "uuid": "^3.1.0",
    "winston": "^2.3.1",
    "yargs": "^13.2.2"
  },
  "optionalDependencies": {
    "winston-journald": "^0.4.0"
  },
  "spec": {
    "installDir": "/opt/kentech/afb-server/bin",
    "specTemplate": "afb-server-spec.mustache",
    "noarch": false,
    "executable": [
      "./worker_stub.py"
    ],
    "requires": [
      "unrar",
      "mongodb-org",
      "poppler-utils",
      "ghostscript",
      "kta-python-magic",
      "kta-python-rarfile",
      "kta-python-Pillow"
    ]
  },
  "engines": {
    "node": ">= 10.0.0"
  }
}
